Index: helper-sdk/src/main/java/com/helper/activity/BrowserActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.helper.activity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.print.PdfPrint;\r\nimport android.print.PrintAttributes;\r\nimport android.text.TextUtils;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.ConsoleMessage;\r\nimport android.webkit.WebChromeClient;\r\nimport android.webkit.WebResourceRequest;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\n\r\nimport com.adssdk.PageAdsAppCompactActivity;\r\nimport com.helper.Helper;\r\nimport com.helper.R;\r\nimport com.helper.callback.Response;\r\nimport com.helper.util.BaseConstants;\r\nimport com.helper.util.BaseUtil;\r\nimport com.helper.util.FileUtils;\r\nimport com.helper.util.Logger;\r\nimport com.helper.util.RunTimePermissionUtility;\r\nimport com.helper.util.ShareHtmlContent;\r\nimport com.helper.util.SocialUtil;\r\n\r\nimport java.io.File;\r\n\r\n\r\npublic class BrowserActivity extends PageAdsAppCompactActivity {\r\n\r\n    private String TAG = \"BrowserActivity\";\r\n    private String url;\r\n\r\n    private static final int WRITE_EXTERNAL_REQUEST_CODE_FOR_PDF = 101;\r\n    private static final int WRITE_EXTERNAL_REQUEST_CODE_FOR_SHARE = 102;\r\n    public ProgressBar progressBar;\r\n    public RelativeLayout container;\r\n    public WebView webView;\r\n    private String title;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.base_activity_browser);\r\n\r\n        initDataFromIntent();\r\n        if (getSupportActionBar() != null) {\r\n            getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n            if (!TextUtils.isEmpty(title)) {\r\n                getSupportActionBar().setTitle(title);\r\n            }\r\n        }\r\n        BaseUtil.loadBanner(findViewById(R.id.rlBannerAds), this);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onPause() {\r\n        webView.onPause();\r\n        webView.pauseTimers();\r\n        super.onPause();\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        webView.resumeTimers();\r\n        webView.onResume();\r\n    }\r\n\r\n\r\n    private void initDataFromIntent() {\r\n        progressBar = findViewById(R.id.progressBar);\r\n        container = findViewById(R.id.container);\r\n        Intent intent = getIntent();\r\n\r\n        if (intent.hasExtra(BaseConstants.WEB_VIEW_URL)) {\r\n            url = intent.getStringExtra(BaseConstants.WEB_VIEW_URL);\r\n        }\r\n        if (intent.hasExtra(BaseConstants.TITLE)) {\r\n            title = intent.getStringExtra(BaseConstants.TITLE);\r\n        }\r\n        if (TextUtils.isEmpty(url)) {\r\n            BaseUtil.showToast(this, \"Invalid Url\");\r\n            finish();\r\n            return;\r\n        }\r\n        Logger.e(TAG, \"WebView Url => \" + url);\r\n\r\n//        webView = findViewById(R.id.webView);\r\n        webView = new WebView(getApplicationContext());\r\n        container.addView(webView);\r\n        webView.setWebChromeClient(new WebChromeClient() {\r\n            @Override\r\n            public boolean onConsoleMessage(ConsoleMessage consoleMessage) {\r\n                super.onConsoleMessage(consoleMessage);\r\n                if (consoleMessage.message().startsWith(TAG)) {\r\n                    if (consoleMessage.message().toLowerCase().contains(\"viewable only\") && consoleMessage.message().toLowerCase().contains(\"landscape\")) {\r\n                        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        webView.setWebViewClient(new WebViewClient() {\r\n\r\n            @Override\r\n            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\r\n                super.shouldOverrideUrlLoading(view, request);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n                    String requestUrl = request.getUrl().toString();\r\n                    return filterUrl(view, requestUrl);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean shouldOverrideUrlLoading(WebView view, String url) {\r\n                super.shouldOverrideUrlLoading(view, url);\r\n                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\r\n                    return filterUrl(view, url);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            private boolean filterUrl(WebView view, String mUrl) {\r\n                url = mUrl;\r\n                if (mUrl.endsWith(\"viewer.action=download\")) {\r\n                    Intent i = new Intent(Intent.ACTION_VIEW);\r\n                    i.setData(Uri.parse(mUrl));\r\n                    startActivity(i);\r\n                    return false;\r\n                }\r\n                if (isUrlPdfType(mUrl)) {\r\n                    openPDF(mUrl);\r\n                    return false;\r\n                }\r\n                if (isUrlIntentType(mUrl)) {\r\n                    SocialUtil.openIntentUrl(BrowserActivity.this, mUrl);\r\n                    progressBar.setVisibility(View.GONE);\r\n                    webView.stopLoading();\r\n                    webView.goBack();\r\n                    return false;\r\n                }\r\n                view.loadUrl(mUrl);\r\n                return true;\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onPageCommitVisible(WebView view, String url) {\r\n                super.onPageCommitVisible(view, url);\r\n                progressBar.setVisibility(View.GONE);\r\n            }\r\n\r\n            @Override\r\n            public void onPageFinished(WebView view, String url) {\r\n                super.onPageFinished(view, url);\r\n                progressBar.setVisibility(View.GONE);\r\n                webView.setVisibility(View.VISIBLE);\r\n                if (!isUrlPdfType(url))\r\n                    view.loadUrl(\"javascript:console.log('\" + TAG + \"'+document.getElementsByTagName('html')[0].innerHTML);\");\r\n            }\r\n        });\r\n        webView.getSettings().setJavaScriptEnabled(true);\r\n        webView.getSettings().setBuiltInZoomControls(false);\r\n        webView.loadUrl(url);\r\n    }\r\n\r\n    private boolean isUrlPdfType(String url) {\r\n        return url.toLowerCase().endsWith(\".pdf\");\r\n    }\r\n\r\n    private boolean isUrlIntentType(String url) {\r\n        return url.toLowerCase().startsWith(\"intent://\");\r\n    }\r\n\r\n    private void openPDF(String url) {\r\n        if (!TextUtils.isEmpty(url)) {\r\n            if (Helper.getInstance().getListener() != null) {\r\n                Helper.getInstance().getListener().onOpenPdf(this, (int) System.currentTimeMillis(), TextUtils.isEmpty(title) ? \"From Browser\" : title, url);\r\n            } else {\r\n                SocialUtil.openUrlExternal(this, url);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.base_menu_browser, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        int id = item.getItemId();\r\n\r\n        if (id == android.R.id.home) {\r\n            onBackPressed();\r\n            return true;\r\n        } else if (id == R.id.action_share) {\r\n            shareLink();\r\n            return true;\r\n        } else if (id == R.id.action_refresh) {\r\n            progressBar.setVisibility(View.VISIBLE);\r\n            webView.setVisibility(View.GONE);\r\n            webView.loadUrl(url);\r\n            return true;\r\n        } else if (id == R.id.action_pdf) {\r\n            if (RunTimePermissionUtility.doWeHaveWriteExternalStoragePermission(BrowserActivity.this)) {\r\n                try {\r\n                    saveWebPageToPDF(webView);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n                RunTimePermissionUtility.requestWriteExternalStoragePermission(BrowserActivity.this, WRITE_EXTERNAL_REQUEST_CODE_FOR_PDF);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\r\n        Logger.e(TAG, \"requestCode : \" + requestCode + \", permissions :\" + permissions + \",grantResults : \" + grantResults);\r\n\r\n        if (grantResults.length == 1 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n            Logger.e(TAG, \"WRITE_EXTERNAL permission has now been granted. Showing result.\");\r\n            if (requestCode == WRITE_EXTERNAL_REQUEST_CODE_FOR_PDF) {\r\n                try {\r\n                    saveWebPageToPDF(webView);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        } else {\r\n            Logger.e(TAG, \"WRITE_EXTERNAL permission was NOT granted.\");\r\n            if (requestCode == WRITE_EXTERNAL_REQUEST_CODE_FOR_PDF) {\r\n                RunTimePermissionUtility.showReasonBoxForWriteExternalStoragePermission(this, WRITE_EXTERNAL_REQUEST_CODE_FOR_PDF);\r\n            }\r\n        }\r\n    }\r\n\r\n    private boolean isRunning = false;\r\n\r\n    /**\r\n     * Alternate Class ShareHtmlContent\r\n     */\r\n    private void saveWebPageToPDF(WebView webView) throws Exception {\r\n        //FBAnalytics.fbLogStringValue(BaseConstants.FBAnalyticsEvent.CREATE_PDF, url);\r\n        if (Build.VERSION.SDK_INT >= 21) {\r\n            if (!isRunning) {\r\n                isRunning = true;\r\n                showHideProgressBar(true);\r\n                String jobName = getString(R.string.app_name);\r\n                PrintAttributes attributes = new PrintAttributes.Builder()\r\n                        .setMediaSize(PrintAttributes.MediaSize.ISO_A4)\r\n                        .setResolution(new PrintAttributes.Resolution(\"pdf\", \"pdf\", 600, 600))\r\n                        .setMinMargins(PrintAttributes.Margins.NO_MARGINS).build();\r\n//                File path = FileUtils.getFilePublic(this, jobName);\r\n                final File path = FileUtils.getFileStoreDirectory(this, jobName);\r\n                String fileName = \"Result\" + System.currentTimeMillis() + \".pdf\";\r\n                PdfPrint pdfPrint = new PdfPrint(attributes);\r\n                pdfPrint.print(webView.createPrintDocumentAdapter(jobName), path, fileName, new PdfPrint.PDFSaveInterface() {\r\n                    @Override\r\n                    public void onSaveFinished(boolean isSuccess) {\r\n                        showHideProgressBar(false);\r\n                        //sharePDF(fullPath);\r\n                        isRunning = false;\r\n                        if (isSuccess) {\r\n                            showPDFSaveDialog(\"PDF saved to Documents\", new File(path, fileName));\r\n                        } else {\r\n                            showPDFFailDialog();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                BaseUtil.showToast(this, \"Already processing existing request. Please wait...\");\r\n            }\r\n        } else {\r\n            showPDFFailDialog();\r\n        }\r\n    }\r\n\r\n    private void showPDFFailDialog() {\r\n        BaseUtil.showToast(this, \"Your Phone not able to perform this Action.\");\r\n    }\r\n\r\n    private void showHideProgressBar(boolean show) {\r\n        if (show) {\r\n            String processing = \"Saving PDF to SD Card....\";\r\n//            progressDialog = new ProgressDialog(this, R.style.DialogTheme);\r\n//            progressDialog.setMessage(processing);\r\n//            progressDialog.setCancelable(false);\r\n//            progressDialog.show();\r\n            BaseUtil.showDialog(this, processing, false);\r\n        } else {\r\n//            if (progressDialog.isShowing()) {\r\n//                progressDialog.dismiss();\r\n//            }\r\n            BaseUtil.hideDialog();\r\n        }\r\n    }\r\n\r\n    private void sharePDF(File fullPath) {\r\n        Logger.e(TAG, \"sharePDF Path : \" + fullPath);\r\n        SocialUtil.sharePdf(this, fullPath);\r\n    }\r\n\r\n    private void showPDFSaveDialog(String message, final File pdfPath) {\r\n        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this, R.style.DialogTheme);\r\n        alertDialogBuilder.setTitle(\"Alert\");\r\n\r\n        //alertDialogBuilder.setIcon(R.drawable.notification_template_icon_bg);\r\n        alertDialogBuilder.setMessage(message);\r\n\r\n        alertDialogBuilder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface arg0, int arg1) {\r\n                arg0.cancel();\r\n            }\r\n        });\r\n\r\n        alertDialogBuilder.setNegativeButton(\"Share\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                sharePDF(pdfPath);\r\n            }\r\n        });\r\n\r\n        AlertDialog alertDialog = alertDialogBuilder.create();\r\n        alertDialog.show();\r\n    }\r\n\r\n    private void shareLink() {\r\n        if (url != null) {\r\n            SocialUtil.shareText(this, url);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK) {\r\n            if (requestCode == 21) {\r\n                String croppedImagePath = data.getStringExtra(\"image_path\");\r\n                SocialUtil.shareImageIntent(BrowserActivity.this, croppedImagePath);\r\n            }\r\n        } else {\r\n            Logger.e(TAG, \"onActivityResult : \" + resultCode);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (webView != null && webView.canGoBack()) {\r\n            webView.goBack();\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper-sdk/src/main/java/com/helper/activity/BrowserActivity.java b/helper-sdk/src/main/java/com/helper/activity/BrowserActivity.java
--- a/helper-sdk/src/main/java/com/helper/activity/BrowserActivity.java	(revision afecb19007cb9bed300326b15b4595c3df9b23b8)
+++ b/helper-sdk/src/main/java/com/helper/activity/BrowserActivity.java	(date 1629893609734)
@@ -22,8 +22,8 @@
 import android.widget.RelativeLayout;
 
 import androidx.appcompat.app.AlertDialog;
+import androidx.appcompat.app.AppCompatActivity;
 
-import com.adssdk.PageAdsAppCompactActivity;
 import com.helper.Helper;
 import com.helper.R;
 import com.helper.callback.Response;
@@ -38,7 +38,7 @@
 import java.io.File;
 
 
-public class BrowserActivity extends PageAdsAppCompactActivity {
+public class BrowserActivity extends AppCompatActivity {
 
     private String TAG = "BrowserActivity";
     private String url;
Index: helper-sdk/src/main/java/com/helper/model/base/BaseDataModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.helper.model.base;\r\n\r\nimport androidx.room.Ignore;\r\n\r\nimport com.adssdk.BaseAdModelClass;\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class BaseDataModel extends BaseAdModelClass {\r\n\r\n    @Expose\r\n    @SerializedName(value=\"image_path\", alternate={\"whiteboard_image_path\"})\r\n    @Ignore\r\n    private String imagePath ;\r\n\r\n    @Expose\r\n    @SerializedName(value=\"pdf_path\", alternate={\"whiteboard_pdf_path\"})\r\n    @Ignore\r\n    private String pdfPath ;\r\n\r\n    @Expose\r\n    @SerializedName(value=\"content_image_path\")\r\n    @Ignore\r\n    private String contentImagePath ;\r\n\r\n    public String getImagePath() {\r\n        return imagePath;\r\n    }\r\n\r\n    public void setImagePath(String imagePath) {\r\n        this.imagePath = imagePath;\r\n    }\r\n\r\n    public String getPdfPath() {\r\n        return pdfPath;\r\n    }\r\n\r\n    public void setPdfPath(String pdfPath) {\r\n        this.pdfPath = pdfPath;\r\n    }\r\n\r\n    public String getContentImagePath() {\r\n        return contentImagePath;\r\n    }\r\n\r\n    public void setContentImagePath(String contentImagePath) {\r\n        this.contentImagePath = contentImagePath;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper-sdk/src/main/java/com/helper/model/base/BaseDataModel.java b/helper-sdk/src/main/java/com/helper/model/base/BaseDataModel.java
--- a/helper-sdk/src/main/java/com/helper/model/base/BaseDataModel.java	(revision afecb19007cb9bed300326b15b4595c3df9b23b8)
+++ b/helper-sdk/src/main/java/com/helper/model/base/BaseDataModel.java	(date 1629893845311)
@@ -2,11 +2,10 @@
 
 import androidx.room.Ignore;
 
-import com.adssdk.BaseAdModelClass;
 import com.google.gson.annotations.Expose;
 import com.google.gson.annotations.SerializedName;
 
-public class BaseDataModel extends BaseAdModelClass {
+public class BaseDataModel extends BaseHelperAdModelClass {
 
     @Expose
     @SerializedName(value="image_path", alternate={"whiteboard_image_path"})
Index: helper-sdk/src/main/java/com/helper/util/BaseUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.helper.util;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Network;\r\nimport android.net.NetworkCapabilities;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Build;\r\nimport android.text.Html;\r\nimport android.text.SpannableString;\r\nimport android.text.Spanned;\r\nimport android.text.TextUtils;\r\nimport android.text.format.DateUtils;\r\nimport android.text.style.AbsoluteSizeSpan;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.adssdk.AdsSDK;\r\nimport com.helper.R;\r\nimport com.helper.activity.BrowserActivity;\r\nimport com.helper.callback.Response;\r\nimport com.helper.widget.PopupProgress;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport static android.view.View.GONE;\r\nimport static android.view.View.VISIBLE;\r\n\r\npublic class BaseUtil {\r\n\r\n    public static SpannableString spannableText(String sentence, int textColor, String... coloredTest) {\r\n        return spannableText(sentence, textColor, 0, coloredTest);\r\n    }\r\n    public static SpannableString spannableText(String sentence, int textColor, int textSizeInPx, String... coloredTest) {\r\n        return StyleUtil.spannableText(sentence, textColor, textSizeInPx, false, coloredTest);\r\n    }\r\n\r\n    public static void showToast(Context context, String message) {\r\n        showToastCentre(context, message);\r\n    }\r\n\r\n    public static void showToastCentre(Context context, String msg) {\r\n        Toast toast = Toast.makeText(context, msg, Toast.LENGTH_SHORT);\r\n        toast.setGravity(Gravity.CENTER, 0, 0);\r\n        toast.show();\r\n    }\r\n\r\n    public static String getFormattedViews(int number) {\r\n        return convertNumberUSFormat(number);\r\n    }\r\n\r\n    //US format\r\n    public static String convertNumberUSFormat(int number){\r\n        try {\r\n            String[] suffix = new String[]{\"K\",\"M\",\"B\",\"T\"};\r\n            int size = (number != 0) ? (int) Math.log10(number) : 0;\r\n            if (size >= 3){\r\n                while (size % 3 != 0) {\r\n                    size = size - 1;\r\n                }\r\n            }\r\n            double notation = Math.pow(10, size);\r\n            return (size >= 3) ? + (Math.round((number / notation) * 100) / 100.0d)+suffix[(size/3) - 1] : + number + \"\";\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return number + \"\";\r\n        }\r\n    }\r\n\r\n    // indian format\r\n    public static String convertNumberINFormat(int n) {\r\n        try {\r\n            String[] c = new String[]{\"K\", \"L\", \"Cr\"};\r\n            int size = String.valueOf(n).length();\r\n            if (size>=4 && size<6) {\r\n                int value = (int) Math.pow(10, 1);\r\n                double d = (double) Math.round(n/1000.0 * value) / value;\r\n                return (double) Math.round(n/1000.0 * value) / value+\" \"+c[0];\r\n            } else if(size>5 && size<8) {\r\n                int value = (int) Math.pow(10, 1);\r\n                return (double) Math.round(n/100000.0 * value) / value+\" \"+c[1];\r\n            } else if(size>=8) {\r\n                int value = (int) Math.pow(10, 1);\r\n                return (double) Math.round(n/10000000.0 * value) / value+\" \"+c[2];\r\n            } else {\r\n                return n+\"\";\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return n + \"\";\r\n        }\r\n    }\r\n\r\n    public static boolean isConnected(Context context) {\r\n        boolean isConnected = false;\r\n        try {\r\n            if (context != null && context.getSystemService(Context.CONNECTIVITY_SERVICE) != null && context.getSystemService(Context.CONNECTIVITY_SERVICE) instanceof ConnectivityManager) {\r\n                ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    Network network = connectivityManager.getActiveNetwork();\r\n                    if (network != null) {\r\n                        NetworkCapabilities nc = connectivityManager.getNetworkCapabilities(network);\r\n                        isConnected = nc != null && (nc.hasTransport(NetworkCapabilities.TRANSPORT_WIFI) || nc.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR) || nc.hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET) || nc.hasTransport(NetworkCapabilities.TRANSPORT_BLUETOOTH));\r\n                    }\r\n                } else {\r\n                    NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();\r\n                    isConnected = activeNetwork != null && activeNetwork.isConnected();\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return isConnected;\r\n    }\r\n\r\n    public static void showNoData(View view, @Response.Visibility int visibility) {\r\n        if (view != null) {\r\n            view.setVisibility(visibility);\r\n            if(visibility == VISIBLE) {\r\n                TextView tvNoData = view.findViewById(R.id.tv_no_data);\r\n                if (view.findViewById(R.id.player_progressbar) != null) {\r\n                    view.findViewById(R.id.player_progressbar).setVisibility(GONE);\r\n                }\r\n                if (tvNoData != null) {\r\n                    tvNoData.setVisibility(VISIBLE);\r\n                    if (!isConnected(view.getContext())) {\r\n                        tvNoData.setText(BaseConstants.NO_INTERNET_CONNECTION);\r\n                    } else {\r\n                        tvNoData.setText(BaseConstants.NO_DATA);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void showNoDataProgress(View view) {\r\n        if (view != null) {\r\n            view.setVisibility(VISIBLE);\r\n            if (view.findViewById(com.helper.R.id.player_progressbar) != null) {\r\n                view.findViewById(com.helper.R.id.player_progressbar).setVisibility(VISIBLE);\r\n            }\r\n            TextView tvNoData = view.findViewById(com.helper.R.id.tv_no_data);\r\n            if (tvNoData != null) {\r\n                tvNoData.setVisibility(GONE);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static String getColorValue(Context context, int colorResource) {\r\n        return getColorValue(context, \"\", colorResource);\r\n    }\r\n    public static String getColorValue(Context context, String transparentLevel, int colorResource) {\r\n        try {\r\n            String colorValue = Integer.toHexString(ContextCompat.getColor(context, colorResource) & 0x00ffffff);\r\n            if(colorValue.length() < 6){\r\n                switch (colorValue.length()){\r\n                    case 5:\r\n                        colorValue = \"0\" + colorValue;\r\n                        break;\r\n                    case 4:\r\n                        colorValue = \"00\" + colorValue;\r\n                        break;\r\n                    case 3:\r\n                        colorValue = \"000\" + colorValue;\r\n                        break;\r\n                }\r\n            }\r\n            return \"#\" + transparentLevel + colorValue;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return \"#ffffff\";\r\n        }\r\n    }\r\n\r\n    public static boolean isValidUrl(String url) {\r\n        if (!TextUtils.isEmpty(url)) {\r\n            return (url.startsWith(\"file://\") || url.startsWith(\"http://\") || url.startsWith(\"https://\"));\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static boolean isNightMode(Context context) {\r\n        return DayNightPreference.isNightModeEnabled(context);\r\n    }\r\n\r\n    public static void setNightMode(Context context, boolean isNightModeEnabled) {\r\n        DayNightPreference.setNightMode(context, isNightModeEnabled);\r\n    }\r\n\r\n    @SuppressWarnings(\"deprecation\")\r\n    public static Spanned fromHtml(String html) {\r\n        if (html == null) {\r\n            return new SpannableString(\"\");\r\n        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n            return Html.fromHtml(html, Html.FROM_HTML_MODE_LEGACY);\r\n        } else {\r\n            return Html.fromHtml(html);\r\n        }\r\n    }\r\n    public static void loadBanner(final RelativeLayout view , Activity activity) {\r\n        if ( view != null && activity != null && AdsSDK.getInstance() != null ){\r\n            AdsSDK.getInstance().setAdoptiveBannerAdsOnView(view , activity);\r\n        }\r\n    }\r\n\r\n    public static void openLinkInAppBrowser(Context context, String title, String webUrl) {\r\n        try {\r\n            Intent intent = new Intent(context, BrowserActivity.class);\r\n            intent.putExtra(BaseConstants.WEB_VIEW_URL, webUrl);\r\n            intent.putExtra(BaseConstants.TITLE, title);\r\n            context.startActivity(intent);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            BaseUtil.showToast(context, \"No option available for take action.\");\r\n        }\r\n    }\r\n\r\n\r\n    public static void showProgressDialog(boolean isShow, Context context) {\r\n        showProgressDialog(context, isShow, context.getString(R.string.helper_loading));\r\n    }\r\n    public static void showProgressDialog(Context context, boolean isShow, String message) {\r\n        if (context != null) {\r\n            if (context instanceof Activity && !((Activity) context).isFinishing()) {\r\n                if (isShow) {\r\n                    BaseUtil.showDialog(message, context);\r\n                } else {\r\n                    BaseUtil.hideDialog();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static AlertDialog dialog;\r\n\r\n    public static void hideDialog() {\r\n        try {\r\n            if (dialog != null && dialog.isShowing()) {\r\n                dialog.dismiss();\r\n                dialog = null;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void showDialog(String msg, Context context) {\r\n        showDialog(context, msg, true);\r\n    }\r\n\r\n    public static void showDialog(Context context, String msg, boolean isCancelable) {\r\n        if (dialog == null) {\r\n            try {\r\n                dialog = PopupProgress.newInstance(context, msg)\r\n                        .setCancelable(isCancelable)\r\n                        .show();\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    public static boolean isEmptyOrNull(String s) {\r\n        return (s == null || TextUtils.isEmpty(s));\r\n    }\r\n\r\n\r\n\r\n    public static String timeTaken(long time) {\r\n        return String.format(Locale.US, \"%02d min, %02d sec\",\r\n                TimeUnit.MILLISECONDS.toMinutes(time),\r\n                TimeUnit.MILLISECONDS.toSeconds(time) -\r\n                        TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(time))\r\n        );\r\n    }\r\n\r\n    public static String getTimeSpanString(String serverDateFormat){\r\n        try {\r\n            Date mDate = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.US).parse(serverDateFormat);\r\n            if(mDate != null) {\r\n                long timeInMilliseconds = mDate.getTime();\r\n                return DateUtils.getRelativeTimeSpanString(timeInMilliseconds, System.currentTimeMillis(), DateUtils.SECOND_IN_MILLIS).toString();\r\n            }\r\n\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return serverDateFormat;\r\n    }\r\n\r\n    /**\r\n     * @param mileSecond enter time in millis\r\n     * @return Returns a string describing 'time' as a time relative to 'now'.\r\n     * Time spans in the past are formatted like \"42 minutes ago\". Time spans in the future are formatted like \"In 42 minutes\".\r\n     * i.e: 5 days ago, or 5 minutes ago.\r\n     */\r\n    public static CharSequence convertTimeStamp(String mileSecond){\r\n        int flags = DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR | DateUtils.FORMAT_ABBREV_MONTH | DateUtils.FORMAT_SHOW_TIME;\r\n        return DateUtils.getRelativeTimeSpanString(Long.parseLong(mileSecond), System.currentTimeMillis(), DateUtils.SECOND_IN_MILLIS, flags);\r\n    }\r\n\r\n    public static String getTimeStamp() {\r\n        return new SimpleDateFormat(\"_yyyyMMdd_HHmmss\", Locale.getDefault()).format(new Date());\r\n    }\r\n\r\n    public static void showKeyboard(View view) {\r\n        try {\r\n            if (view != null && view.requestFocus()) {\r\n                InputMethodManager imm = (InputMethodManager)\r\n                        view.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                if(imm!=null) {\r\n                    imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public static void hideKeyboard(Activity activity) {\r\n        try {\r\n            if(activity != null) {\r\n                InputMethodManager imm = (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                View f = activity.getCurrentFocus();\r\n                if (null != f && null != f.getWindowToken() && EditText.class.isAssignableFrom(f.getClass()))\r\n                    imm.hideSoftInputFromWindow(f.getWindowToken(), 0);\r\n                else\r\n                    activity.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper-sdk/src/main/java/com/helper/util/BaseUtil.java b/helper-sdk/src/main/java/com/helper/util/BaseUtil.java
--- a/helper-sdk/src/main/java/com/helper/util/BaseUtil.java	(revision afecb19007cb9bed300326b15b4595c3df9b23b8)
+++ b/helper-sdk/src/main/java/com/helper/util/BaseUtil.java	(date 1629895441529)
@@ -1,5 +1,8 @@
 package com.helper.util;
 
+import static android.view.View.GONE;
+import static android.view.View.VISIBLE;
+
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
@@ -14,8 +17,6 @@
 import android.text.Spanned;
 import android.text.TextUtils;
 import android.text.format.DateUtils;
-import android.text.style.AbsoluteSizeSpan;
-import android.text.style.ForegroundColorSpan;
 import android.view.Gravity;
 import android.view.View;
 import android.view.WindowManager;
@@ -27,7 +28,6 @@
 
 import androidx.core.content.ContextCompat;
 
-import com.adssdk.AdsSDK;
 import com.helper.R;
 import com.helper.activity.BrowserActivity;
 import com.helper.callback.Response;
@@ -39,9 +39,6 @@
 import java.util.Locale;
 import java.util.concurrent.TimeUnit;
 
-import static android.view.View.GONE;
-import static android.view.View.VISIBLE;
-
 public class BaseUtil {
 
     public static SpannableString spannableText(String sentence, int textColor, String... coloredTest) {
@@ -215,9 +212,9 @@
         }
     }
     public static void loadBanner(final RelativeLayout view , Activity activity) {
-        if ( view != null && activity != null && AdsSDK.getInstance() != null ){
-            AdsSDK.getInstance().setAdoptiveBannerAdsOnView(view , activity);
-        }
+//        if ( view != null && activity != null && AdsSDK.getInstance() != null ){
+//            AdsSDK.getInstance().setAdoptiveBannerAdsOnView(view , activity);
+//        }
     }
 
     public static void openLinkInAppBrowser(Context context, String title, String webUrl) {
Index: helper-sdk/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.library'\r\n\r\napply plugin: 'com.github.dcendents.android-maven'\r\n\r\ngroup = 'org.bitbucket.android-dennislabs'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n\r\n    defaultConfig {\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        consumerProguardFiles 'consumer-rules.pro'\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"androidx.appcompat:appcompat:$rootProject.ext.appcompat\"\r\n    implementation \"com.google.android.material:material:$rootProject.ext.material\"\r\n    implementation \"com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit_version\"\r\n    implementation \"androidx.room:room-runtime:$rootProject.ext.room_version\"\r\n    implementation \"org.bitbucket.amitresearchdev:adssdkmaster:$rootProject.ext.adssdkmaster_version\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper-sdk/build.gradle b/helper-sdk/build.gradle
--- a/helper-sdk/build.gradle	(revision afecb19007cb9bed300326b15b4595c3df9b23b8)
+++ b/helper-sdk/build.gradle	(date 1629895379948)
@@ -36,5 +36,4 @@
     implementation "com.google.android.material:material:$rootProject.ext.material"
     implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit_version"
     implementation "androidx.room:room-runtime:$rootProject.ext.room_version"
-    implementation "org.bitbucket.amitresearchdev:adssdkmaster:$rootProject.ext.adssdkmaster_version"
 }
Index: helper-sdk/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"helper_loading\">Loading&#8230;</string>\r\n    <string name=\"helper_popup_progress_message\">Processing, Please wait…</string>\r\n    <string name=\"helper_dialog_message\">Loading, Please wait…</string>\r\n    <string name=\"file_provider\">.fileprovider</string>\r\n\r\n    <integer name=\"url_min_app_version\">01</integer>\r\n    <string name=\"url_public_short_host_postfix\"/>\r\n    <string name=\"url_public_domain_host_manifest\">appName.page.link</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper-sdk/src/main/res/values/strings.xml b/helper-sdk/src/main/res/values/strings.xml
--- a/helper-sdk/src/main/res/values/strings.xml	(revision afecb19007cb9bed300326b15b4595c3df9b23b8)
+++ b/helper-sdk/src/main/res/values/strings.xml	(date 1629893851732)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
+    <string name="app_name">Helper</string>
     <string name="helper_loading">Loading&#8230;</string>
     <string name="helper_popup_progress_message">Processing, Please wait…</string>
     <string name="helper_dialog_message">Loading, Please wait…</string>
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'https://jitpack.io' }\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.1'\r\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\r\n        \r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven {\r\n            url \"https://jitpack.io\"\r\n            credentials { username authToken }\r\n        }\r\n    }\r\n\r\n    //Usege $rootProject.ext.appcompat\r\n    ext {\r\n        appcompat = '1.3.0'\r\n        material = '1.0.0'\r\n        retrofit_version = '2.9.0'\r\n        room_version = \"2.2.5\"\r\n        adssdkmaster_version = '1.1.0-alpha14'\r\n    }\r\n\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision afecb19007cb9bed300326b15b4595c3df9b23b8)
+++ b/build.gradle	(date 1629895441536)
@@ -34,7 +34,6 @@
         material = '1.0.0'
         retrofit_version = '2.9.0'
         room_version = "2.2.5"
-        adssdkmaster_version = '1.1.0-alpha14'
     }
 
 }
Index: helper-sdk/src/main/java/com/helper/model/base/BaseHelperAdModelClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper-sdk/src/main/java/com/helper/model/base/BaseHelperAdModelClass.java b/helper-sdk/src/main/java/com/helper/model/base/BaseHelperAdModelClass.java
new file mode 100644
--- /dev/null	(date 1629893791443)
+++ b/helper-sdk/src/main/java/com/helper/model/base/BaseHelperAdModelClass.java	(date 1629893791443)
@@ -0,0 +1,16 @@
+package com.helper.model.base;
+
+import java.io.Serializable;
+
+public class BaseHelperAdModelClass implements Serializable {
+
+    private int modelId ;
+
+    public int getModelId() {
+        return modelId;
+    }
+
+    public void setModelId(int modelId) {
+        this.modelId = modelId;
+    }
+}
